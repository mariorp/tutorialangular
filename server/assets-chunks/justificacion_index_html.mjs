export default `<!DOCTYPE html><html lang="en" data-beasties-container><head>
  <meta charset="utf-8">
  <title>AngularTutorial</title>
  <base href="/tutorialangular/">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
<style>body{margin:0;padding:0;font-family:Roboto,sans-serif;color:#333;background-color:#f9f9f9}header{background:linear-gradient(90deg,#4e63e8,#8e54e9);color:#fff;padding:20px 40px;display:flex;justify-content:space-between;align-items:center;box-shadow:0 4px 6px #0000001a;position:sticky;top:0;width:100%;z-index:1000}header .logo{font-size:24px;font-weight:700;margin-right:20px}header nav{display:flex;align-items:center}header nav a{color:#fff;text-decoration:none;margin:0 15px;padding:5px 10px;font-size:16px;font-weight:500;border-radius:5px;transition:color .3s ease,background-color .3s ease;cursor:pointer}header nav a:hover{background-color:#ffcf40;color:#333}main{margin:0 auto;padding:20px 40px;max-width:1200px}section{padding:60px 20px;border-bottom:1px solid #ddd;margin-bottom:40px}section h1{font-size:2.5rem;margin-bottom:20px;color:#4e63e8}section p{font-size:1.25rem;color:#666;line-height:1.8;margin-bottom:20px}footer{background-color:#333;color:#fff;text-align:center;padding:20px;font-size:.9rem;margin-top:40px;border-top:3px solid #8e54e9}@media (max-width: 768px){header{flex-direction:column;text-align:center;padding:10px 20px}header nav{flex-direction:column;gap:10px;margin-top:10px}main{padding:20px}section h1{font-size:2rem}section p{font-size:1rem}}.card-container{display:flex;flex-wrap:wrap;gap:20px;justify-content:center;margin-top:40px}.card{background:#fff;border-radius:8px;box-shadow:0 4px 8px #0000001a;max-width:300px;padding:20px;text-align:center;transition:transform .3s ease,box-shadow .3s ease}.card:hover{transform:translateY(-5px);box-shadow:0 6px 12px #0003}.card h3{font-size:1.5rem;margin-bottom:15px;color:#4e63e8}.card p,.card ol{font-size:1rem;color:#666;line-height:1.6;text-align:left}.chart-container{margin-top:50px;display:flex;justify-content:center;align-items:center}.chart-container canvas{max-width:600px;width:100%;height:400px}.code-container{margin-top:40px;padding:20px;background:#f5f5f5;border-radius:8px;box-shadow:0 4px 8px #0000001a;line-height:1.6;font-family:Courier New,Courier,monospace}.code-container h3{font-size:1.25rem;margin-bottom:10px;color:#4e63e8}.code-container pre{background:#333;color:#f8f8f8;padding:15px;border-radius:5px;overflow-x:auto}pre{background:#333;color:#f8f8f8;padding:15px;border-radius:5px;overflow-x:auto;font-size:.95rem}pre code{display:block;font-size:.95rem}.language-bash{color:#00d0ff}.steps-container{display:flex;flex-wrap:wrap;gap:20px;justify-content:center;margin-top:40px}.step{background:#fff;border-radius:8px;box-shadow:0 4px 8px #0000001a;max-width:300px;padding:20px;text-align:center;transition:transform .3s ease,box-shadow .3s ease}.step:hover{transform:translateY(-5px);box-shadow:0 6px 12px #0003}.step h3{font-size:1.25rem;margin-bottom:15px;color:#4e63e8}.step p,.step pre{font-size:1rem;color:#666;line-height:1.6;text-align:left}.step pre{background:#333;color:#f8f8f8;padding:15px;border-radius:5px;overflow-x:auto}.workflow{display:flex;flex-direction:column;gap:20px;margin-top:40px}.workflow h3{font-size:1.2rem;color:#4e63e8;margin-bottom:10px}.workflow pre{background:#333;color:#f8f8f8;padding:15px;border-radius:5px;overflow-x:auto}.cta-container{margin-top:40px;padding:20px;background:linear-gradient(90deg,#4e63e8,#8e54e9);color:#fff;text-align:center;border-radius:8px}.cta-container h2{font-size:1.8rem;margin-bottom:20px}.cta-container p{font-size:1.2rem;margin-bottom:20px;line-height:1.6;color:#fff}.cta-btn{display:inline-block;background-color:#ffcf40;color:#333;padding:10px 20px;font-size:1rem;text-decoration:none;border-radius:25px;transition:background-color .3s ease,transform .3s ease}.cta-btn:hover{background-color:#ffb400;transform:scale(1.05)}
</style><link rel="stylesheet" href="styles-4AD6OD7P.css" media="print" onload="this.media='all'"><noscript><link rel="stylesheet" href="styles-4AD6OD7P.css"></noscript></head>
<body><!--nghm-->
  <app-root ng-version="19.0.5" ngh="0" ng-server-context="ssg"><header><div class="logo">Angular Tutorial</div><nav><a href="#justificacion">Justificación</a><a href="#instalacion">Instalación</a><a href="#primeros-pasos">Primeros Pasos</a><a href="#utilizacion">Utilización</a><a href="#explicacion">Explicación</a><a href="#conclusiones">Conclusiones</a></nav></header><main><section id="justificacion"><h1>Justificación</h1><h2>Angular es un frameword que permite crear aplicaciones rápidas y robustas.</h2><p>Angular, respaldado por un equipo dedicado de Google, ofrece una amplia gama de herramientas, API y bibliotecas que simplifican y optimizan el flujo de trabajo de desarrollo. Es una plataforma sólida para crear aplicaciones rápidas y confiables.</p><div class="card-container"><div class="card"><h3>¿Para qué sirve?</h3><p>Angular es un framework para construir aplicaciones web dinámicas y robustas. Es ideal para proyectos de cualquier escala, desde pequeñas páginas hasta grandes aplicaciones empresariales.</p></div><div class="card"><h3>¿Qué aplicaciones tiene?</h3><p>Angular se utiliza para desarrollar aplicaciones web, aplicaciones móviles híbridas, dashboards, sistemas de gestión y más. Es versátil y potente para adaptarse a múltiples casos de uso.</p></div><div class="card"><h3>¿Sobre qué lenguajes se apoya?</h3><p>Angular se basa en TypeScript, un superconjunto de JavaScript que agrega tipado estático. También utiliza HTML y CSS para la construcción de interfaces.</p></div><div class="card"><h3>¿Qué prerrequisitos necesita?</h3><p>Conocimientos básicos de HTML, CSS y JavaScript son necesarios. Familiaridad con TypeScript y conceptos de programación modular son recomendados.</p></div></div><h3>Aplicaciones actuales de Angular: </h3><div class="chart-container"><canvas id="justificationChart"></canvas></div></section><section id="instalacion"><h1>Instalación</h1><p>Esta sección explica cómo instalar Angular y configurar el entorno necesario para su correcto funcionamiento.</p><div class="card-container"><div class="card"><h3>¿Se precisa instalación?</h3><p>Sí, Angular requiere la instalación de Node.js y Angular CLI para desarrollar aplicaciones.</p></div><div class="card"><h3>¿Qué pasos hay que realizar para la instalación?</h3><ol><li>Instalar Node.js desde <a href="https://nodejs.org" target="_blank">nodejs.org</a>.</li><li>Instalar Angular CLI usando npm.</li><li>Crear un nuevo proyecto Angular con el CLI.</li></ol></div><div class="card"><h3>¿Versiones necesarias?</h3><p>Se recomienda utilizar las versiones LTS de Node.js (18.x o superior) y Angular CLI actualizada.</p></div><div class="card"><h3>¿Rutas para tener en cuenta?</h3><p>Asegúrate de instalar Angular CLI globalmente y verifica las rutas para acceder a las herramientas correctamente.</p></div><div class="card"><h3>¿Variables de entorno?</h3><p>No es necesario configurar variables de entorno específicas para Angular, pero Node.js debe estar en el PATH del sistema.</p></div><div class="card"><h3>¿Necesita base de datos?</h3><p>Angular no necesita una base de datos por sí mismo, pero puedes integrarlo con bases de datos mediante API o servicios backend.</p></div></div><h2>Códigos para instalación y comprobación</h2><div class="code-container"><h3>Instalación de Node.js</h3><pre><code>1. Ve a https://nodejs.org y descarga la versión LTS.
  2. Sigue las instrucciones del instalador para tu sistema operativo.</code></pre><h3>Instalación de Angular CLI</h3><pre><code class="language-bash">npm install -g @angular/cli</code></pre><h3>Comprobación de versiones</h3><pre><code class="language-bash">node -v
  npm -v
  ng version</code></pre><h3>Crear un proyecto Angular</h3><pre><code class="language-bash">ng new mi-proyecto
  cd mi-proyecto
  ng serve</code></pre></div></section><section id="primeros-pasos"><h1>Primeros Pasos</h1><p>Una vez instalado Angular, vamos a realizar un ejemplo práctico: "Hola Mundo".</p><div class="steps-container"><div class="step"><h3>Paso 1: Crear un nuevo proyecto Angular</h3><p>Utiliza Angular CLI para generar un nuevo proyecto:</p><pre><code class="language-bash">ng new hola-mundo</code></pre></div><div class="step"><h3>Paso 2: Navegar al proyecto</h3><p>Accede al directorio del proyecto y ejecuta el servidor de desarrollo:</p><pre><code class="language-bash">cd hola-mundo
  ng serve</code></pre></div><div class="step"><h3>Paso 3: Editar el componente principal</h3><p>Abre el archivo <code>src/app/app.component.html</code> y reemplaza su contenido con:</p><pre><code class="language-html">&lt;h1&gt;Hola Mundo desde Angular!&lt;/h1&gt;</code></pre></div><div class="step"><h3>Paso 4: Visualizar el resultado</h3><p>Accede a <a href="http://localhost:4200" target="_blank">http://localhost:4200</a> y verifica que el mensaje "Hola Mundo desde Angular!" aparece en la pantalla.</p></div></div><div class="code-container"><h3>Código completo de src/app app.component.ts</h3><pre><code class="language-typescript">
  import { Component } from '@angular/core';
  
  @Component({
    selector: 'app-root',
    templateUrl: './app.component.html',
    styleUrls: ['./app.component.css']
  })
  export class AppComponent {
    title = 'hola-mundo';
  }
      </code></pre></div></section><section id="utilizacion"><h1>Utilización del Framework</h1><p>Vamos a crear una aplicación base con Angular y cómo visualizar los resultados de la ejecución.</p><div class="steps-container"><div class="step"><h3>Paso 1: Crear la estructura base</h3><p>Utiliza Angular CLI para crear un nuevo proyecto base con los comandos:</p><pre><code class="language-bash">ng new mi-aplicacion</code></pre><p>Este comando generará una estructura completa de carpetas y archivos para tu aplicación Angular.</p></div><div class="step"><h3>Paso 2: Navegar al proyecto</h3><p>Accede al directorio creado y ejecuta el servidor de desarrollo con:</p><pre><code class="language-bash">cd mi-aplicacion
  ng serve</code></pre><p>Esto iniciará el servidor de desarrollo y tu aplicación estará disponible en <a href="http://localhost:4200" target="_blank">http://localhost:4200</a>.</p></div><div class="step"><h3>Paso 3: Personalizar la página inicial</h3><p>Modifica el archivo <code>src/app/app.component.html</code> para personalizar el contenido de la página inicial. Por ejemplo:</p><pre><code class="language-html">&lt;h1&gt;Bienvenido a Mi Aplicación Angular!&lt;/h1&gt;</code></pre></div><div class="step"><h3>Paso 4: Visualizar los cambios</h3><p>Cada vez que guardes los cambios, Angular recargará automáticamente la aplicación en el navegador.</p></div></div><h2>Código base para src/app app.component.ts</h2><div class="code-container"><pre><code class="language-typescript">
  import { Component } from '@angular/core';
  
  @Component({
    selector: 'app-root',
    templateUrl: './app.component.html',
    styleUrls: ['./app.component.css']
  })
  export class AppComponent {
    title = 'mi-aplicacion';
  }
      </code></pre></div></section><section id="explicacion"><h1>Explicación del Funcionamiento del Framework</h1><p>Exploraremos cómo Angular organiza y actúa sobre las páginas y ficheros, cómo se pueden editar e integrar con otras aplicaciones.</p><div class="card-container"><div class="card"><h3>¿Actúa sobre páginas, ficheros, secciones…?</h3><p>Angular actúa sobre componentes modulares que representan partes específicas de la interfaz de usuario (secciones) en una aplicación web. Estos componentes se combinan para formar páginas completas.</p></div><div class="card"><h3>¿Cómo se editan/modifican los ficheros que actúan en el framework?</h3><p>Los componentes tienen tres partes principales: el archivo HTML para la vista, el archivo CSS para los estilos, y el archivo TypeScript para la lógica. Puedes editarlos directamente en tu editor de código favorito.</p></div><div class="card"><h3>¿Cómo se referencian los ficheros desde otras aplicaciones?</h3><p>Si necesitas referenciar componentes de Angular en otras aplicaciones, puedes convertirlos en bibliotecas reutilizables y publicarlas como paquetes de npm. Esto permite que sean consumidos por otras aplicaciones.</p></div></div><h2>Cómo trabaja Angular con los ficheros</h2><div class="workflow"><div><h3>1. Componentes</h3><p>Un componente es el núcleo funcional en Angular. Ejemplo:</p><pre><code class="language-typescript">
  import { Component } from '@angular/core';
  
  @Component({
    selector: 'app-header',
    templateUrl: './header.component.html',
    styleUrls: ['./header.component.css']
  })
  export class HeaderComponent { }
        </code></pre></div><div><h3>2. Servicios</h3><p>Los servicios gestionan la lógica de negocio y las interacciones con APIs:</p><pre><code class="language-typescript">
  import { Injectable } from '@angular/core';
  
  @Injectable({ providedIn: 'root' })
  export class DataService {
    getData() {
      return ['Dato 1', 'Dato 2', 'Dato 3'];
    }
  }
        </code></pre></div></div><h2>Ejemplo de integración con otra aplicación</h2><pre><code class="language-bash">
  # Crear una biblioteca Angular reutilizable
  ng generate library mi-libreria
  
  # Publicar la biblioteca en npm
  cd projects/mi-libreria
  npm publish
    </code></pre><p>Una vez publicada, la biblioteca puede ser instalada y referenciada desde otras aplicaciones utilizando:</p><pre><code class="language-bash">npm install mi-libreria</code></pre></section><section id="conclusiones"><h1>Conclusiones</h1><p>En este tutorial se han analizado los conceptos fundamentales de Angular, desde la creación de un proyecto base hasta su funcionamiento interno y la organización modular de aplicaciones.</p><div class="card-container"><div class="card"><h3>1. Comprensión del framework</h3><p>Se comprobó cómo Angular organiza componentes, servicios y rutas para construir aplicaciones web escalables y eficientes.</p></div><div class="card"><h3>2. Instalación y configuración</h3><p>Guía para instalar Angular CLI, configurar el entorno y crear un proyecto base funcional.</p></div><div class="card"><h3>3. Estructura y funcionalidad</h3><p>Se realizó un ejemplo de cómo funcionan los componentes, directivas y servicios para desarrollar funcionalidades específicas.</p></div><div class="card"><h3>4. Integración</h3><p>Primer acercamiento de cómo integrar Angular con otras aplicaciones y cómo crear bibliotecas reutilizables.</p></div></div><div class="cta-container"><h2>Angular en profundidad</h2><p>Este tutorial es solo un primer acercamiento a Angular. Para explorar temas más avanzados como la implementación de APIs, la gestión del estado con NgRx o la optimización de aplicaciones para producción.</p><a href="https://angular.io" target="_blank" class="cta-btn">Explorar la documentación oficial</a></div></section></main><footer> © 2024 Angular Tutorial - Todos los derechos reservados.
</footer></app-root>
<script src="polyfills-FFHMD2TL.js" type="module"></script><script src="main-EYVIDSJF.js" type="module"></script>

<script id="ng-state" type="application/json">{"__nghData__":[{}]}</script></body></html>`;